# Generated by Django 3.0.3 on 2020-05-21 21:59

import apps.Usuarios.models
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.BigIntegerField(unique=True, validators=[apps.Usuarios.models.validar_entero], verbose_name='CÃ©dula')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo')),
                ('first_name', models.CharField(blank=True, max_length=30, validators=[apps.Usuarios.models.validar_string], verbose_name='Nombre')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[apps.Usuarios.models.validar_string], verbose_name='Apellido')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Usuarios.Persona')),
                ('tipo', models.CharField(choices=[('persona_natural', 'Persona natural'), ('persona_juridica', 'Persona juridica')], max_length=16, verbose_name='Tipo de persona')),
                ('telefono', models.BigIntegerField(validators=[apps.Usuarios.models.validar_entero])),
                ('aprobado', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('Usuarios.persona',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Empleados',
            fields=[
                ('persona_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Usuarios.Persona')),
                ('roles', models.CharField(choices=[('operador', 'Operador'), ('administrador', 'Administrador'), ('gerente', 'Gerente')], max_length=20, verbose_name='Rol')),
                ('foto_perfil', models.ImageField(default='default.png', upload_to='fotos_perfil')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('Usuarios.persona',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direccion', models.CharField(max_length=20, unique=True)),
                ('fecha_inicio', models.DateField(auto_now=True)),
                ('en_servicio', models.BooleanField(default=True)),
                ('estrato', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=2, verbose_name='Estrato')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Usuarios.Clientes')),
            ],
        ),
    ]
